{"ast":null,"code":"var _jsxFileName = \"/Users/william/Projects/React/follwup-tracker/src/components/track/Track.tsx\",\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport \"./track.css\";\nimport { useRow, useTrack } from \"./util\";\nimport getStyling from \"./style\";\nimport { TaskNumberBadge, TaskPhaseDetails, TaskTrackLine } from \"..\";\nimport { LiaToolsSolid } from \"react-icons/lia\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Track = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    task,\n    onClick\n  } = props;\n  const {\n    phases\n  } = useTrack(task);\n  const styles = getStyling();\n  // TODO::: Don't use IPhaseDTO here, it should be inner model => phaseDTO\n  const Row = ({\n    phase\n  }) => {\n    _s();\n    const {\n      id,\n      name,\n      description,\n      number,\n      icon,\n      status\n    } = phase;\n    const {\n      taskNumberBadgeStyleOverride,\n      taskNumberBadgeNumberStyleOverride,\n      taskPhaseDetailsHeight,\n      taskPhaseDetailsStyleOverride,\n      taskPhaseDetailsTextStyleOverride,\n      taskTrackLineStyleOverride,\n      taskIconStyleOverride\n    } = useRow(description, number, phases === null || phases === void 0 ? void 0 : phases.length, status);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track_row_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.rowContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.rowIconBadgeContainer,\n          children: [icon ?\n          /*#__PURE__*/\n          // TODO::: Add a component for this\n          _jsxDEV(LiaToolsSolid, {\n            size: 30,\n            style: {\n              ...styles.rowIcon,\n              ...taskIconStyleOverride\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TaskNumberBadge, {\n            containerStyle: {\n              ...styles.taskNumberBadge,\n              ...taskNumberBadgeStyleOverride\n            },\n            numberStyle: taskNumberBadgeNumberStyleOverride,\n            number: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskPhaseDetails,\n          onClick: () =>\n          // expandPhaseDetails({ TODO::: resolve this\n          //   name: name,\n          //   description: description ?? \"\",\n          // })\n          null,\n          children: /*#__PURE__*/_jsxDEV(TaskPhaseDetails, {\n            onClick: onClick,\n            hasLimitedDescriptionLines: true,\n            hasLimitedTitleLines: true,\n            title: name,\n            containerStyle: {\n              height: taskPhaseDetailsHeight,\n              ...taskPhaseDetailsStyleOverride\n            },\n            description: description,\n            textStyle: taskPhaseDetailsTextStyleOverride\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.trackContainer,\n        children: /*#__PURE__*/_jsxDEV(TaskTrackLine, {\n          containerStyle: {\n            ...taskTrackLineStyleOverride\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Row, \"OVUThx1GODMwnjJZXZhApfrH5LQ=\", false, function () {\n    return [useRow];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: phases === null || phases === void 0 ? void 0 : phases.map(phase => /*#__PURE__*/_jsxDEV(Row, {\n        phase: phase\n      }, phase.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s2(Track, \"SORJzuuh7kvzwTY70ZtqHD8Ydbo=\", false, function () {\n  return [useTrack];\n});\n_c = Track;\nexport default Track;\nvar _c;\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"names":["React","useRow","useTrack","getStyling","TaskNumberBadge","TaskPhaseDetails","TaskTrackLine","LiaToolsSolid","jsxDEV","_jsxDEV","Track","props","_s2","_s","$RefreshSig$","task","onClick","phases","styles","Row","phase","id","name","description","number","icon","status","taskNumberBadgeStyleOverride","taskNumberBadgeNumberStyleOverride","taskPhaseDetailsHeight","taskPhaseDetailsStyleOverride","taskPhaseDetailsTextStyleOverride","taskTrackLineStyleOverride","taskIconStyleOverride","length","className","children","style","rowContainer","rowIconBadgeContainer","size","rowIcon","fileName","_jsxFileName","lineNumber","columnNumber","width","containerStyle","taskNumberBadge","numberStyle","taskPhaseDetails","hasLimitedDescriptionLines","hasLimitedTitleLines","title","height","textStyle","trackContainer","map","_c","$RefreshReg$"],"sources":["/Users/william/Projects/React/follwup-tracker/src/components/track/Track.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport \"./track.css\";\nimport { useRow, useTrack } from \"./util\";\nimport { IPhaseDTO } from \"../../interfaces\";\nimport getStyling from \"./style\";\nimport { TaskNumberBadge, TaskPhaseDetails, TaskTrackLine } from \"..\";\nimport { LiaToolsSolid } from \"react-icons/lia\";\nimport { ITrackProps } from \"./interface\";\n\nconst Track: FC<ITrackProps> = (props) => {\n  const { task, onClick } = props;\n  const { phases } = useTrack(task);\n  const styles = getStyling();\n  // TODO::: Don't use IPhaseDTO here, it should be inner model => phaseDTO\n  const Row = ({ phase }: { phase: IPhaseDTO }) => {\n    const { id, name, description, number, icon, status } = phase;\n\n    const {\n      taskNumberBadgeStyleOverride,\n      taskNumberBadgeNumberStyleOverride,\n      taskPhaseDetailsHeight,\n      taskPhaseDetailsStyleOverride,\n      taskPhaseDetailsTextStyleOverride,\n      taskTrackLineStyleOverride,\n      taskIconStyleOverride,\n    } = useRow(description, number, phases?.length, status);\n\n    return (\n      <div className=\"track_row_container\">\n        <div style={styles.rowContainer}>\n          <div style={styles.rowIconBadgeContainer}>\n            {icon ? (\n              // TODO::: Add a component for this\n              <LiaToolsSolid\n                size={30}\n                style={{ ...styles.rowIcon, ...taskIconStyleOverride }}\n              />\n            ) : (\n              <div style={{ width: 30 }} />\n            )}\n            <TaskNumberBadge\n              containerStyle={{\n                ...styles.taskNumberBadge,\n                ...taskNumberBadgeStyleOverride,\n              }}\n              numberStyle={taskNumberBadgeNumberStyleOverride}\n              number={number}\n            />\n          </div>\n          <div\n            style={styles.taskPhaseDetails}\n            onClick={() =>\n              // expandPhaseDetails({ TODO::: resolve this\n              //   name: name,\n              //   description: description ?? \"\",\n              // })\n              null\n            }\n          >\n            <TaskPhaseDetails\n              onClick={onClick}\n              hasLimitedDescriptionLines\n              hasLimitedTitleLines\n              title={name}\n              containerStyle={{\n                height: taskPhaseDetailsHeight,\n                ...taskPhaseDetailsStyleOverride,\n              }}\n              description={description}\n              textStyle={taskPhaseDetailsTextStyleOverride}\n            />\n          </div>\n        </div>\n        <div style={styles.trackContainer}>\n          <TaskTrackLine\n            containerStyle={{\n              ...taskTrackLineStyleOverride,\n            }}\n          />\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"track_container\">\n      <div>\n        {/* TODO::: Don't use IPhaseDTO here, it should be inner model => phaseDTO */}\n        {phases?.map((phase) => (\n          <Row key={phase.id} phase={phase} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Track;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}