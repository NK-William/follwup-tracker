{"ast":null,"code":"import{taskPhaseStatus}from\"../../enums\";import{primary,accent,grayLight,gray}from\"../../constants/colors\";export const useTrack=task=>{return{phases:task===null||task===void 0?void 0:task.phases};};export const useRow=function(description,number,dataLength){let status=arguments.length>3&&arguments[3]!==undefined?arguments[3]:taskPhaseStatus.Completed;let taskPhaseDetailsHeight=76;if(!description)taskPhaseDetailsHeight=40;// taskNumberBadge\nlet taskNumberBadgeStyleOverride;let taskNumberBadgeNumberStyleOverride;// taskPhaseDetails\nlet taskPhaseDetailsStyleOverride;let taskPhaseDetailsTextStyleOverride;// taskTrackLine\nlet taskTrackLineStyleOverride;// taskIcon\nlet taskIconStyleOverride;if(status===taskPhaseStatus.InProgress){taskNumberBadgeStyleOverride={backgroundColor:grayLight,borderWidth:3,borderColor:primary};taskTrackLineStyleOverride={backgroundColor:grayLight};taskNumberBadgeNumberStyleOverride={color:primary};}else if(status===taskPhaseStatus.Pending){taskNumberBadgeStyleOverride={backgroundColor:grayLight};taskNumberBadgeNumberStyleOverride={color:accent};taskTrackLineStyleOverride={backgroundColor:grayLight};taskPhaseDetailsStyleOverride={borderTop:\"2px solid \"+grayLight,borderBottom:\"2px solid \"+grayLight,borderLeft:\"2px solid \"+grayLight};taskPhaseDetailsTextStyleOverride={color:gray};taskIconStyleOverride={color:grayLight};}if(number===dataLength)taskTrackLineStyleOverride={height:23,backgroundColor:\"transparent\"};return{taskNumberBadgeStyleOverride,taskNumberBadgeNumberStyleOverride,taskPhaseDetailsHeight,taskPhaseDetailsStyleOverride,taskPhaseDetailsTextStyleOverride,taskTrackLineStyleOverride,taskIconStyleOverride};};","map":{"version":3,"names":["taskPhaseStatus","primary","accent","grayLight","gray","useTrack","task","phases","useRow","description","number","dataLength","status","arguments","length","undefined","Completed","taskPhaseDetailsHeight","taskNumberBadgeStyleOverride","taskNumberBadgeNumberStyleOverride","taskPhaseDetailsStyleOverride","taskPhaseDetailsTextStyleOverride","taskTrackLineStyleOverride","taskIconStyleOverride","InProgress","backgroundColor","borderWidth","borderColor","color","Pending","borderTop","borderBottom","borderLeft","height"],"sources":["/Users/william/Projects/React/follwup-tracker/src/components/track/util.ts"],"sourcesContent":["import { taskPhaseStatus } from \"../../enums\";\nimport { IPhaseDTO, ITaskDTO } from \"../../interfaces\";\nimport { primary, accent, grayLight, gray } from \"../../constants/colors\";\n\nexport const useTrack = (task?: ITaskDTO) => {\n  return { phases: task?.phases };\n};\n\nexport const useRow = (\n  description?: string,\n  number?: number,\n  dataLength?: number,\n  status: taskPhaseStatus = taskPhaseStatus.Completed\n) => {\n  let taskPhaseDetailsHeight = 76;\n  if (!description) taskPhaseDetailsHeight = 40;\n\n  // taskNumberBadge\n  let taskNumberBadgeStyleOverride;\n  let taskNumberBadgeNumberStyleOverride;\n\n  // taskPhaseDetails\n  let taskPhaseDetailsStyleOverride;\n  let taskPhaseDetailsTextStyleOverride;\n\n  // taskTrackLine\n  let taskTrackLineStyleOverride;\n\n  // taskIcon\n  let taskIconStyleOverride;\n\n  if (status === taskPhaseStatus.InProgress) {\n    taskNumberBadgeStyleOverride = {\n      backgroundColor: grayLight,\n      borderWidth: 3,\n      borderColor: primary,\n    };\n    taskTrackLineStyleOverride = { backgroundColor: grayLight };\n    taskNumberBadgeNumberStyleOverride = { color: primary };\n  } else if (status === taskPhaseStatus.Pending) {\n    taskNumberBadgeStyleOverride = { backgroundColor: grayLight };\n    taskNumberBadgeNumberStyleOverride = { color: accent };\n    taskTrackLineStyleOverride = { backgroundColor: grayLight };\n    taskPhaseDetailsStyleOverride = {\n      borderTop: \"2px solid \" + grayLight,\n      borderBottom: \"2px solid \" + grayLight,\n      borderLeft: \"2px solid \" + grayLight,\n    };\n    taskPhaseDetailsTextStyleOverride = { color: gray };\n    taskIconStyleOverride = { color: grayLight };\n  }\n\n  if (number === dataLength)\n    taskTrackLineStyleOverride = { height: 23, backgroundColor: \"transparent\" };\n\n  return {\n    taskNumberBadgeStyleOverride,\n    taskNumberBadgeNumberStyleOverride,\n    taskPhaseDetailsHeight,\n    taskPhaseDetailsStyleOverride,\n    taskPhaseDetailsTextStyleOverride,\n    taskTrackLineStyleOverride,\n    taskIconStyleOverride,\n  };\n};\n"],"mappings":"AAAA,OAASA,eAAe,KAAQ,aAAa,CAE7C,OAASC,OAAO,CAAEC,MAAM,CAAEC,SAAS,CAAEC,IAAI,KAAQ,wBAAwB,CAEzE,MAAO,MAAM,CAAAC,QAAQ,CAAIC,IAAe,EAAK,CAC3C,MAAO,CAAEC,MAAM,CAAED,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEC,MAAO,CAAC,CACjC,CAAC,CAED,MAAO,MAAM,CAAAC,MAAM,CAAG,QAAAA,CACpBC,WAAoB,CACpBC,MAAe,CACfC,UAAmB,CAEhB,IADH,CAAAC,MAAuB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGb,eAAe,CAACgB,SAAS,CAEnD,GAAI,CAAAC,sBAAsB,CAAG,EAAE,CAC/B,GAAI,CAACR,WAAW,CAAEQ,sBAAsB,CAAG,EAAE,CAE7C;AACA,GAAI,CAAAC,4BAA4B,CAChC,GAAI,CAAAC,kCAAkC,CAEtC;AACA,GAAI,CAAAC,6BAA6B,CACjC,GAAI,CAAAC,iCAAiC,CAErC;AACA,GAAI,CAAAC,0BAA0B,CAE9B;AACA,GAAI,CAAAC,qBAAqB,CAEzB,GAAIX,MAAM,GAAKZ,eAAe,CAACwB,UAAU,CAAE,CACzCN,4BAA4B,CAAG,CAC7BO,eAAe,CAAEtB,SAAS,CAC1BuB,WAAW,CAAE,CAAC,CACdC,WAAW,CAAE1B,OACf,CAAC,CACDqB,0BAA0B,CAAG,CAAEG,eAAe,CAAEtB,SAAU,CAAC,CAC3DgB,kCAAkC,CAAG,CAAES,KAAK,CAAE3B,OAAQ,CAAC,CACzD,CAAC,IAAM,IAAIW,MAAM,GAAKZ,eAAe,CAAC6B,OAAO,CAAE,CAC7CX,4BAA4B,CAAG,CAAEO,eAAe,CAAEtB,SAAU,CAAC,CAC7DgB,kCAAkC,CAAG,CAAES,KAAK,CAAE1B,MAAO,CAAC,CACtDoB,0BAA0B,CAAG,CAAEG,eAAe,CAAEtB,SAAU,CAAC,CAC3DiB,6BAA6B,CAAG,CAC9BU,SAAS,CAAE,YAAY,CAAG3B,SAAS,CACnC4B,YAAY,CAAE,YAAY,CAAG5B,SAAS,CACtC6B,UAAU,CAAE,YAAY,CAAG7B,SAC7B,CAAC,CACDkB,iCAAiC,CAAG,CAAEO,KAAK,CAAExB,IAAK,CAAC,CACnDmB,qBAAqB,CAAG,CAAEK,KAAK,CAAEzB,SAAU,CAAC,CAC9C,CAEA,GAAIO,MAAM,GAAKC,UAAU,CACvBW,0BAA0B,CAAG,CAAEW,MAAM,CAAE,EAAE,CAAER,eAAe,CAAE,aAAc,CAAC,CAE7E,MAAO,CACLP,4BAA4B,CAC5BC,kCAAkC,CAClCF,sBAAsB,CACtBG,6BAA6B,CAC7BC,iCAAiC,CACjCC,0BAA0B,CAC1BC,qBACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}