{"ast":null,"code":"var _jsxFileName = \"/Users/william/Projects/React/follwup-tracker/src/components/stats/Stats.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./stats.css\";\nimport { useStats } from \"./util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stats = props => {\n  _s();\n  const {\n    currentPhase,\n    phasesSum,\n    CompletionDate\n  } = props;\n  const {\n    getFormattedDate\n  } = useStats(CompletionDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stats_container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [phasesSum ? `${currentPhase} of ${phasesSum} tasks completed,` : \"\", CompletionDate ? `estimated completion time is ${getFormattedDate()}` : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Stats, \"JPoqoZSzEQfimkUutr4lIArjUUk=\", false, function () {\n  return [useStats];\n});\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useStats","jsxDEV","_jsxDEV","Stats","props","_s","currentPhase","phasesSum","CompletionDate","getFormattedDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/william/Projects/React/follwup-tracker/src/components/stats/Stats.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport \"./stats.css\";\nimport { useStats } from \"./util\";\nimport { IStatsProps } from \"./interface\";\n\nconst Stats: FC<IStatsProps> = (props) => {\n  const { currentPhase, phasesSum, CompletionDate } = props;\n  const { getFormattedDate } = useStats(CompletionDate);\n  return (\n    <div className=\"stats_container\">\n      <p>\n        {phasesSum ? `${currentPhase} of ${phasesSum} tasks completed,` : \"\"}\n        {CompletionDate\n          ? `estimated completion time is ${getFormattedDate()}`\n          : \"\"}\n      </p>\n    </div>\n  );\n};\n\nexport default Stats;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,KAAsB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAe,CAAC,GAAGJ,KAAK;EACzD,MAAM;IAAEK;EAAiB,CAAC,GAAGT,QAAQ,CAACQ,cAAc,CAAC;EACrD,oBACEN,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BT,OAAA;MAAAS,QAAA,GACGJ,SAAS,GAAG,GAAGD,YAAY,OAAOC,SAAS,mBAAmB,GAAG,EAAE,EACnEC,cAAc,GACX,gCAAgCC,gBAAgB,CAAC,CAAC,EAAE,GACpD,EAAE;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACV,EAAA,CAbIF,KAAsB;EAAA,QAEGH,QAAQ;AAAA;AAAAgB,EAAA,GAFjCb,KAAsB;AAe5B,eAAeA,KAAK;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}