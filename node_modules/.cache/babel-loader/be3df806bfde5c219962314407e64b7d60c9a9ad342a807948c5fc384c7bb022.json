{"ast":null,"code":"var _jsxFileName = \"/Users/william/Projects/React/follwup-tracker/src/components/track/Track.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./track.css\";\nimport { useTrack } from \"./util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Track = () => {\n  _s();\n  const {\n    phases\n  } = useTrack();\n  // TODO::: Don't use IPhaseDTO here, it should be inner model => phaseDTO\n  const Row = phase => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: phase.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track_body\",\n      children: phases.map(phase => /*#__PURE__*/_jsxDEV(Row, {\n        phase: phase\n      }, phase.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Track, \"SORJzuuh7kvzwTY70ZtqHD8Ydbo=\", false, function () {\n  return [useTrack];\n});\n_c = Track;\nexport default Track;\nvar _c;\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"names":["React","useTrack","jsxDEV","_jsxDEV","Track","_s","phases","Row","phase","children","name","fileName","_jsxFileName","lineNumber","columnNumber","className","map","id","_c","$RefreshReg$"],"sources":["/Users/william/Projects/React/follwup-tracker/src/components/track/Track.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./track.css\";\nimport { useTrack } from \"./util\";\nimport { IPhaseDTO } from \"../../interfaces\";\n\nconst Track = () => {\n  const { phases } = useTrack();\n  // TODO::: Don't use IPhaseDTO here, it should be inner model => phaseDTO\n  const Row = (phase: IPhaseDTO) => {\n    return <p>{phase.name}</p>;\n  };\n  return (\n    <div className=\"track_container\">\n      <div className=\"track_body\">\n        {phases.map((phase: IPhaseDTO) => (\n          <Row key={phase.id} phase={phase} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Track;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGL,QAAQ,CAAC,CAAC;EAC7B;EACA,MAAMM,GAAG,GAAIC,KAAgB,IAAK;IAChC,oBAAOL,OAAA;MAAAM,QAAA,EAAID,KAAK,CAACE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC5B,CAAC;EACD,oBACEX,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAN,QAAA,eAC9BN,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAN,QAAA,EACxBH,MAAM,CAACU,GAAG,CAAER,KAAgB,iBAC3BL,OAAA,CAACI,GAAG;QAAgBC,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACS,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAfID,KAAK;EAAA,QACUH,QAAQ;AAAA;AAAAiB,EAAA,GADvBd,KAAK;AAiBX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}