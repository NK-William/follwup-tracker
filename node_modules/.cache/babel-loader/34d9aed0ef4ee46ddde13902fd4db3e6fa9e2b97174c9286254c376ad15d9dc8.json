{"ast":null,"code":"import React from\"react\";import\"./track.css\";import{useRow,useTrack}from\"./util\";import getStyling from\"./style\";import{MappedIcon,TaskNumberBadge,TaskPhaseDetails,TaskTrackLine}from\"..\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Track=props=>{const{task,onClick}=props;const{phases}=useTrack(task);const styles=getStyling();// TODO:::v2 Don't use IPhaseDTO here, it should be inner model => phaseDTO\nconst Row=_ref=>{let{phase}=_ref;const{id,name,description,number,icon,status}=phase;const{taskNumberBadgeStyleOverride,taskNumberBadgeNumberStyleOverride,taskPhaseDetailsHeight,taskPhaseDetailsStyleOverride,taskPhaseDetailsTextStyleOverride,taskTrackLineStyleOverride,taskIconStyleOverride}=useRow(description,number,phases===null||phases===void 0?void 0:phases.length,status);console.log(\"got icon: \",icon);return/*#__PURE__*/_jsxs(\"div\",{className:\"track_row_container\",children:[/*#__PURE__*/_jsxs(\"div\",{style:styles.rowContainer,children:[/*#__PURE__*/_jsxs(\"div\",{style:styles.rowIconBadgeContainer,children:[icon?/*#__PURE__*/_jsx(MappedIcon,{icon:icon,taskIconStyleOverride:taskIconStyleOverride}):/*#__PURE__*/_jsx(\"div\",{style:{width:30}}),/*#__PURE__*/_jsx(TaskNumberBadge,{containerStyle:{...styles.taskNumberBadge,...taskNumberBadgeStyleOverride},numberStyle:taskNumberBadgeNumberStyleOverride,number:number})]}),/*#__PURE__*/_jsx(\"div\",{style:styles.taskPhaseDetails,children:/*#__PURE__*/_jsx(TaskPhaseDetails,{onClick:onClick,hasLimitedDescriptionLines:true,hasLimitedTitleLines:true,title:name,containerStyle:{height:taskPhaseDetailsHeight,...taskPhaseDetailsStyleOverride},description:description,textStyle:taskPhaseDetailsTextStyleOverride})})]}),/*#__PURE__*/_jsx(\"div\",{style:styles.trackContainer,children:/*#__PURE__*/_jsx(TaskTrackLine,{containerStyle:{...taskTrackLineStyleOverride}})})]});};return/*#__PURE__*/_jsx(\"div\",{className:\"track_container\",children:/*#__PURE__*/_jsx(\"div\",{children:phases===null||phases===void 0?void 0:phases.map(phase=>/*#__PURE__*/_jsx(Row,{phase:phase},phase.id))})});};export default Track;","map":{"version":3,"names":["React","useRow","useTrack","getStyling","MappedIcon","TaskNumberBadge","TaskPhaseDetails","TaskTrackLine","jsx","_jsx","jsxs","_jsxs","Track","props","task","onClick","phases","styles","Row","_ref","phase","id","name","description","number","icon","status","taskNumberBadgeStyleOverride","taskNumberBadgeNumberStyleOverride","taskPhaseDetailsHeight","taskPhaseDetailsStyleOverride","taskPhaseDetailsTextStyleOverride","taskTrackLineStyleOverride","taskIconStyleOverride","length","console","log","className","children","style","rowContainer","rowIconBadgeContainer","width","containerStyle","taskNumberBadge","numberStyle","taskPhaseDetails","hasLimitedDescriptionLines","hasLimitedTitleLines","title","height","textStyle","trackContainer","map"],"sources":["/Users/william/Projects/React/follwup-tracker/src/components/track/Track.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport \"./track.css\";\nimport { useRow, useTrack } from \"./util\";\nimport { IPhaseDTO } from \"../../interfaces\";\nimport getStyling from \"./style\";\nimport {\n  MappedIcon,\n  TaskNumberBadge,\n  TaskPhaseDetails,\n  TaskTrackLine,\n} from \"..\";\nimport { ITrackProps } from \"./interface\";\n\nconst Track: FC<ITrackProps> = (props) => {\n  const { task, onClick } = props;\n  const { phases } = useTrack(task);\n  const styles = getStyling();\n  // TODO:::v2 Don't use IPhaseDTO here, it should be inner model => phaseDTO\n  const Row = ({ phase }: { phase: IPhaseDTO }) => {\n    const { id, name, description, number, icon, status } = phase;\n\n    const {\n      taskNumberBadgeStyleOverride,\n      taskNumberBadgeNumberStyleOverride,\n      taskPhaseDetailsHeight,\n      taskPhaseDetailsStyleOverride,\n      taskPhaseDetailsTextStyleOverride,\n      taskTrackLineStyleOverride,\n      taskIconStyleOverride,\n    } = useRow(description, number, phases?.length, status);\n\n    console.log(\"got icon: \", icon);\n\n    return (\n      <div className=\"track_row_container\">\n        <div style={styles.rowContainer}>\n          <div style={styles.rowIconBadgeContainer}>\n            {icon ? (\n              <MappedIcon\n                icon={icon}\n                taskIconStyleOverride={taskIconStyleOverride}\n              />\n            ) : (\n              <div style={{ width: 30 }} />\n            )}\n            <TaskNumberBadge\n              containerStyle={{\n                ...styles.taskNumberBadge,\n                ...taskNumberBadgeStyleOverride,\n              }}\n              numberStyle={taskNumberBadgeNumberStyleOverride}\n              number={number}\n            />\n          </div>\n          <div style={styles.taskPhaseDetails}>\n            <TaskPhaseDetails\n              onClick={onClick}\n              hasLimitedDescriptionLines\n              hasLimitedTitleLines\n              title={name}\n              containerStyle={{\n                height: taskPhaseDetailsHeight,\n                ...taskPhaseDetailsStyleOverride,\n              }}\n              description={description}\n              textStyle={taskPhaseDetailsTextStyleOverride}\n            />\n          </div>\n        </div>\n        <div style={styles.trackContainer}>\n          <TaskTrackLine\n            containerStyle={{\n              ...taskTrackLineStyleOverride,\n            }}\n          />\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"track_container\">\n      <div>\n        {/* TODO:::v2 Don't use IPhaseDTO here, it should be inner model => phaseDTO */}\n        {phases?.map((phase) => (\n          <Row key={phase.id} phase={phase} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Track;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}