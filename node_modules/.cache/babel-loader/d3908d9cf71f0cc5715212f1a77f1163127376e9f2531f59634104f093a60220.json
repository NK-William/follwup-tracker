{"ast":null,"code":"import { taskPhaseStatus } from \"../../enums\";\nimport { primary, accent, grayLight, gray } from \"../../constants/colors\";\nexport const useTrack = task => {\n  return {\n    phases: task === null || task === void 0 ? void 0 : task.phases\n  };\n};\nexport const useRow = (description, number, dataLength, status = taskPhaseStatus.Completed) => {\n  let taskPhaseDetailsHeight = 76;\n  if (!description) taskPhaseDetailsHeight = 40;\n\n  // taskNumberBadge\n  let taskNumberBadgeStyleOverride;\n  let taskNumberBadgeNumberStyleOverride;\n\n  // taskPhaseDetails\n  let taskPhaseDetailsStyleOverride;\n  let taskPhaseDetailsTextStyleOverride;\n\n  // taskTrackLine\n  let taskTrackLineStyleOverride;\n\n  // taskIcon\n  let taskIconStyleOverride;\n  if (status === taskPhaseStatus.InProgress) {\n    taskNumberBadgeStyleOverride = {\n      backgroundColor: grayLight,\n      borderWidth: 3,\n      borderColor: primary\n    };\n    taskTrackLineStyleOverride = {\n      backgroundColor: grayLight\n    };\n    taskNumberBadgeNumberStyleOverride = {\n      color: primary\n    };\n  } else if (status === taskPhaseStatus.Pending) {\n    taskNumberBadgeStyleOverride = {\n      backgroundColor: grayLight\n    };\n    taskNumberBadgeNumberStyleOverride = {\n      color: accent\n    };\n    taskTrackLineStyleOverride = {\n      backgroundColor: grayLight\n    };\n    taskPhaseDetailsStyleOverride = {\n      borderTop: \"2px solid \" + grayLight,\n      borderBottom: \"2px solid \" + grayLight,\n      borderLeft: \"2px solid \" + grayLight\n    };\n    taskPhaseDetailsTextStyleOverride = {\n      color: gray\n    };\n    taskIconStyleOverride = {\n      color: grayLight\n    };\n  }\n  if (number === dataLength) taskTrackLineStyleOverride = {\n    height: 23,\n    backgroundColor: \"transparent\"\n  };\n  return {\n    taskNumberBadgeStyleOverride,\n    taskNumberBadgeNumberStyleOverride,\n    taskPhaseDetailsHeight,\n    taskPhaseDetailsStyleOverride,\n    taskPhaseDetailsTextStyleOverride,\n    taskTrackLineStyleOverride,\n    taskIconStyleOverride\n  };\n};","map":{"version":3,"names":["taskPhaseStatus","primary","accent","grayLight","gray","useTrack","task","phases","useRow","description","number","dataLength","status","Completed","taskPhaseDetailsHeight","taskNumberBadgeStyleOverride","taskNumberBadgeNumberStyleOverride","taskPhaseDetailsStyleOverride","taskPhaseDetailsTextStyleOverride","taskTrackLineStyleOverride","taskIconStyleOverride","InProgress","backgroundColor","borderWidth","borderColor","color","Pending","borderTop","borderBottom","borderLeft","height"],"sources":["/Users/william/Projects/React/follwup-tracker/src/components/track/util.ts"],"sourcesContent":["import { taskPhaseStatus } from \"../../enums\";\nimport { IPhaseDTO, ITaskDTO } from \"../../interfaces\";\nimport { primary, accent, grayLight, gray } from \"../../constants/colors\";\n\nexport const useTrack = (task?: ITaskDTO) => {\n  return { phases: task?.phases };\n};\n\nexport const useRow = (\n  description?: string,\n  number?: number,\n  dataLength?: number,\n  status: taskPhaseStatus = taskPhaseStatus.Completed\n) => {\n  let taskPhaseDetailsHeight = 76;\n  if (!description) taskPhaseDetailsHeight = 40;\n\n  // taskNumberBadge\n  let taskNumberBadgeStyleOverride;\n  let taskNumberBadgeNumberStyleOverride;\n\n  // taskPhaseDetails\n  let taskPhaseDetailsStyleOverride;\n  let taskPhaseDetailsTextStyleOverride;\n\n  // taskTrackLine\n  let taskTrackLineStyleOverride;\n\n  // taskIcon\n  let taskIconStyleOverride;\n\n  if (status === taskPhaseStatus.InProgress) {\n    taskNumberBadgeStyleOverride = {\n      backgroundColor: grayLight,\n      borderWidth: 3,\n      borderColor: primary,\n    };\n    taskTrackLineStyleOverride = { backgroundColor: grayLight };\n    taskNumberBadgeNumberStyleOverride = { color: primary };\n  } else if (status === taskPhaseStatus.Pending) {\n    taskNumberBadgeStyleOverride = { backgroundColor: grayLight };\n    taskNumberBadgeNumberStyleOverride = { color: accent };\n    taskTrackLineStyleOverride = { backgroundColor: grayLight };\n    taskPhaseDetailsStyleOverride = {\n      borderTop: \"2px solid \" + grayLight,\n      borderBottom: \"2px solid \" + grayLight,\n      borderLeft: \"2px solid \" + grayLight,\n    };\n    taskPhaseDetailsTextStyleOverride = { color: gray };\n    taskIconStyleOverride = { color: grayLight };\n  }\n\n  if (number === dataLength)\n    taskTrackLineStyleOverride = { height: 23, backgroundColor: \"transparent\" };\n\n  return {\n    taskNumberBadgeStyleOverride,\n    taskNumberBadgeNumberStyleOverride,\n    taskPhaseDetailsHeight,\n    taskPhaseDetailsStyleOverride,\n    taskPhaseDetailsTextStyleOverride,\n    taskTrackLineStyleOverride,\n    taskIconStyleOverride,\n  };\n};\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,aAAa;AAE7C,SAASC,OAAO,EAAEC,MAAM,EAAEC,SAAS,EAAEC,IAAI,QAAQ,wBAAwB;AAEzE,OAAO,MAAMC,QAAQ,GAAIC,IAAe,IAAK;EAC3C,OAAO;IAAEC,MAAM,EAAED,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC;EAAO,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CACpBC,WAAoB,EACpBC,MAAe,EACfC,UAAmB,EACnBC,MAAuB,GAAGZ,eAAe,CAACa,SAAS,KAChD;EACH,IAAIC,sBAAsB,GAAG,EAAE;EAC/B,IAAI,CAACL,WAAW,EAAEK,sBAAsB,GAAG,EAAE;;EAE7C;EACA,IAAIC,4BAA4B;EAChC,IAAIC,kCAAkC;;EAEtC;EACA,IAAIC,6BAA6B;EACjC,IAAIC,iCAAiC;;EAErC;EACA,IAAIC,0BAA0B;;EAE9B;EACA,IAAIC,qBAAqB;EAEzB,IAAIR,MAAM,KAAKZ,eAAe,CAACqB,UAAU,EAAE;IACzCN,4BAA4B,GAAG;MAC7BO,eAAe,EAAEnB,SAAS;MAC1BoB,WAAW,EAAE,CAAC;MACdC,WAAW,EAAEvB;IACf,CAAC;IACDkB,0BAA0B,GAAG;MAAEG,eAAe,EAAEnB;IAAU,CAAC;IAC3Da,kCAAkC,GAAG;MAAES,KAAK,EAAExB;IAAQ,CAAC;EACzD,CAAC,MAAM,IAAIW,MAAM,KAAKZ,eAAe,CAAC0B,OAAO,EAAE;IAC7CX,4BAA4B,GAAG;MAAEO,eAAe,EAAEnB;IAAU,CAAC;IAC7Da,kCAAkC,GAAG;MAAES,KAAK,EAAEvB;IAAO,CAAC;IACtDiB,0BAA0B,GAAG;MAAEG,eAAe,EAAEnB;IAAU,CAAC;IAC3Dc,6BAA6B,GAAG;MAC9BU,SAAS,EAAE,YAAY,GAAGxB,SAAS;MACnCyB,YAAY,EAAE,YAAY,GAAGzB,SAAS;MACtC0B,UAAU,EAAE,YAAY,GAAG1B;IAC7B,CAAC;IACDe,iCAAiC,GAAG;MAAEO,KAAK,EAAErB;IAAK,CAAC;IACnDgB,qBAAqB,GAAG;MAAEK,KAAK,EAAEtB;IAAU,CAAC;EAC9C;EAEA,IAAIO,MAAM,KAAKC,UAAU,EACvBQ,0BAA0B,GAAG;IAAEW,MAAM,EAAE,EAAE;IAAER,eAAe,EAAE;EAAc,CAAC;EAE7E,OAAO;IACLP,4BAA4B;IAC5BC,kCAAkC;IAClCF,sBAAsB;IACtBG,6BAA6B;IAC7BC,iCAAiC;IACjCC,0BAA0B;IAC1BC;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}