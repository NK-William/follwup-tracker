{"ast":null,"code":"var _jsxFileName = \"/Users/william/Projects/React/follwup-tracker/src/components/taskContent/TaskContent.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTaskContent } from \"./util\";\nimport \"./taskContent.css\";\nimport { Header, Stats, Track, FullDetailsView } from \"..\";\nimport { FallingLines } from \"react-loader-spinner\";\nimport { primary } from \"../../constants/colors\";\nimport placeholder from \"../../assets/placeholder.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContent = () => {\n  _s();\n  const {\n    taskData,\n    isLoading,\n    showFullDetailsView,\n    fullDetailsViewData,\n    noDataAfterFetch,\n    setShowFullDetailsView,\n    handleShowFullDetailsView,\n    getNumberOfCompletedPhases\n  } = useTaskContent();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskContent_container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: taskData === null || taskData === void 0 ? void 0 : taskData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), noDataAfterFetch && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskContent_placeholder_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: placeholder,\n        alt: \"Empty Placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskContent_loader_container\",\n      children: /*#__PURE__*/_jsxDEV(FallingLines, {\n        color: primary,\n        width: \"60\",\n        visible: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      currentPhase: getNumberOfCompletedPhases(),\n      phasesSum: taskData === null || taskData === void 0 ? void 0 : taskData.phases.length,\n      CompletionDate: taskData ? new Date(taskData === null || taskData === void 0 ? void 0 : taskData.eta) : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Track, {\n      task: taskData,\n      onClick: handleShowFullDetailsView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), showFullDetailsView && /*#__PURE__*/_jsxDEV(FullDetailsView, {\n      title: fullDetailsViewData.title,\n      text: fullDetailsViewData.text,\n      onClose: () => setShowFullDetailsView(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskContent, \"sftadKBV22LeWzt9aXBeAa0OZKc=\", false, function () {\n  return [useTaskContent];\n});\n_c = TaskContent;\nexport default TaskContent;\nvar _c;\n$RefreshReg$(_c, \"TaskContent\");","map":{"version":3,"names":["React","useTaskContent","Header","Stats","Track","FullDetailsView","FallingLines","primary","placeholder","jsxDEV","_jsxDEV","TaskContent","_s","taskData","isLoading","showFullDetailsView","fullDetailsViewData","noDataAfterFetch","setShowFullDetailsView","handleShowFullDetailsView","getNumberOfCompletedPhases","className","children","text","name","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","color","width","visible","currentPhase","phasesSum","phases","length","CompletionDate","Date","eta","undefined","task","onClick","title","onClose","_c","$RefreshReg$"],"sources":["/Users/william/Projects/React/follwup-tracker/src/components/taskContent/TaskContent.tsx"],"sourcesContent":["import React from \"react\";\nimport { useTaskContent } from \"./util\";\nimport \"./taskContent.css\";\nimport { Header, Stats, Track, FullDetailsView } from \"..\";\nimport { FallingLines } from \"react-loader-spinner\";\nimport { primary } from \"../../constants/colors\";\nimport placeholder from \"../../assets/placeholder.png\";\n\nconst TaskContent = () => {\n  const {\n    taskData,\n    isLoading,\n    showFullDetailsView,\n    fullDetailsViewData,\n    noDataAfterFetch,\n    setShowFullDetailsView,\n    handleShowFullDetailsView,\n    getNumberOfCompletedPhases,\n  } = useTaskContent();\n\n  return (\n    <div className=\"taskContent_container\">\n      <Header text={taskData?.name} />\n      {noDataAfterFetch && (\n        <div className=\"taskContent_placeholder_container\">\n          <img src={placeholder} alt=\"Empty Placeholder\" />\n          <p>Something went wrong</p>\n        </div>\n      )}\n      <div className=\"taskContent_loader_container\">\n        <FallingLines color={primary} width=\"60\" visible={isLoading} />\n      </div>\n      <Stats\n        currentPhase={getNumberOfCompletedPhases()}\n        phasesSum={taskData?.phases.length}\n        CompletionDate={taskData ? new Date(taskData?.eta) : undefined}\n      />\n      <Track task={taskData} onClick={handleShowFullDetailsView} />\n      {showFullDetailsView && (\n        <FullDetailsView\n          title={fullDetailsViewData.title}\n          text={fullDetailsViewData.text}\n          onClose={() => setShowFullDetailsView(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TaskContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}