{"ast":null,"code":"var _jsxFileName = \"/Users/william/Projects/React/follwup-tracker/src/components/track/Track.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./track.css\";\nimport { useTrack } from \"./util\";\nimport getStyling from \"./style\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Track = () => {\n  _s();\n  const {\n    phases\n  } = useTrack();\n  const styles = getStyling();\n  // TODO::: Don't use IPhaseDTO here, it should be inner model => phaseDTO\n  const Row = ({\n    phase\n  }) => {\n    const {\n      id,\n      name,\n      description,\n      number,\n      icon,\n      status\n    } = phase;\n\n    // const {\n    //   taskNumberBadgeStyleOverride,\n    //   taskNumberBadgeNumberStyleOverride,\n    //   taskPhaseDetailsHeight,\n    //   taskPhaseDetailsStyleOverride,\n    //   taskPhaseDetailsTextStyleOverride,\n    //   taskTrackLineStyleOverride,\n    //   taskIconStyleOverride,\n    // } = useRow(description, number, phases.length, status);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: number === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.rowEle,\n        children: \"H\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this) : null\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track_body\",\n      children: phases.map(phase => /*#__PURE__*/_jsxDEV(Row, {\n        phase: phase\n      }, phase.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Track, \"SORJzuuh7kvzwTY70ZtqHD8Ydbo=\", false, function () {\n  return [useTrack];\n});\n_c = Track;\nexport default Track;\nvar _c;\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"names":["React","useTrack","getStyling","jsxDEV","_jsxDEV","Fragment","_Fragment","Track","_s","phases","styles","Row","phase","id","name","description","number","icon","status","children","style","rowEle","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_c","$RefreshReg$"],"sources":["/Users/william/Projects/React/follwup-tracker/src/components/track/Track.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport \"./track.css\";\nimport { useRow, useTrack } from \"./util\";\nimport { IPhaseDTO } from \"../../interfaces\";\nimport getStyling from \"./style\";\n\nconst Track = () => {\n  const { phases } = useTrack();\n  const styles = getStyling();\n  // TODO::: Don't use IPhaseDTO here, it should be inner model => phaseDTO\n  const Row = ({ phase }: { phase: IPhaseDTO }) => {\n    const { id, name, description, number, icon, status } = phase;\n\n    // const {\n    //   taskNumberBadgeStyleOverride,\n    //   taskNumberBadgeNumberStyleOverride,\n    //   taskPhaseDetailsHeight,\n    //   taskPhaseDetailsStyleOverride,\n    //   taskPhaseDetailsTextStyleOverride,\n    //   taskTrackLineStyleOverride,\n    //   taskIconStyleOverride,\n    // } = useRow(description, number, phases.length, status);\n\n    return (\n      <>\n        {number === 1 ? <div style={styles.rowEle}>H</div> : null}\n\n        {/* <div style={styles.rowContainer}>\n          <View style={styles.actionIconContainer}>\n            <Pressable\n              onPress={() =>\n                onEditClick(name, number, status, description, icon, id)\n              }>\n              <Icon\n                iconType=\"FontAwesome5\"\n                iconName=\"pen\"\n                size={20}\n                style={styles.actionIcon}\n              />\n            </Pressable>\n            <Pressable\n              style={{marginLeft: 12}}\n              onPress={() => (id ? onDelete(id) : null)}>\n              <Icon\n                iconType=\"FontAwesome5\"\n                iconName=\"trash\"\n                size={20}\n                style={styles.actionIcon}\n              />\n            </Pressable>\n          </View>\n          {icon ? (\n            <Icon\n              style={{...styles.rowIcon, ...taskIconStyleOverride}}\n              size={30}\n              iconType=\"Ionicons\"\n              iconName={icon}\n            />\n          ) : (\n            <View style={{width: 30}} />\n          )}\n          <TaskNumberBadge\n            onPress={updatePhaseStatus}\n            phaseId={id ?? ''}\n            containerStyle={{\n              ...styles.taskNumberBadge,\n              ...taskNumberBadgeStyleOverride,\n            }}\n            numberStyle={taskNumberBadgeNumberStyleOverride}\n            number={number}\n          />\n          <Pressable\n            style={styles.taskPhaseDetails}\n            onPress={() =>\n              expandPhaseDetails({\n                name: name,\n                description: description ?? '',\n              })\n            }>\n            <TaskPhaseDetails\n              hasLimitedDescriptionLines\n              hasLimitedTitleLines\n              title={name}\n              containerStyle={{\n                height: taskPhaseDetailsHeight,\n                ...taskPhaseDetailsStyleOverride,\n              }}\n              description={description}\n              textStyle={taskPhaseDetailsTextStyleOverride}\n            />\n          </Pressable>\n        </div>\n        <View style={styles.trackContainer}>\n          <TaskTrackLine\n            containerStyle={{\n              ...taskTrackLineStyleOverride,\n            }}\n          />\n          <Pressable\n            style={{marginLeft: 6, alignSelf: 'center'}}\n            onPress={() => onAddClick(number + 1)}>\n            <Icon\n              iconType=\"Ionicons\"\n              iconName=\"add-circle-outline\"\n              size={30}\n              style={styles.actionIcon}\n            />\n          </Pressable>\n        </View> */}\n      </>\n    );\n  };\n  return (\n    <div className=\"track_container\">\n      <div className=\"track_body\">\n        {/* TODO::: Don't use IPhaseDTO here, it should be inner model => phaseDTO */}\n        {phases.map((phase) => (\n          <Row key={phase.id} phase={phase} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Track;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,OAAO,aAAa;AACpB,SAAiBC,QAAQ,QAAQ,QAAQ;AAEzC,OAAOC,UAAU,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC7B,MAAMS,MAAM,GAAGR,UAAU,CAAC,CAAC;EAC3B;EACA,MAAMS,GAAG,GAAGA,CAAC;IAAEC;EAA4B,CAAC,KAAK;IAC/C,MAAM;MAAEC,EAAE;MAAEC,IAAI;MAAEC,WAAW;MAAEC,MAAM;MAAEC,IAAI;MAAEC;IAAO,CAAC,GAAGN,KAAK;;IAE7D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,oBACER,OAAA,CAAAE,SAAA;MAAAa,QAAA,EACGH,MAAM,KAAK,CAAC,gBAAGZ,OAAA;QAAKgB,KAAK,EAAEV,MAAM,CAACW,MAAO;QAAAF,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAAG;IAAI,gBAoFzD,CAAC;EAEP,CAAC;EACD,oBACErB,OAAA;IAAKsB,SAAS,EAAC,iBAAiB;IAAAP,QAAA,eAC9Bf,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAP,QAAA,EAExBV,MAAM,CAACkB,GAAG,CAAEf,KAAK,iBAChBR,OAAA,CAACO,GAAG;QAAgBC,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CApHID,KAAK;EAAA,QACUN,QAAQ;AAAA;AAAA2B,EAAA,GADvBrB,KAAK;AAsHX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}